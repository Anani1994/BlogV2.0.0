(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{303:function(t,s,r){"use strict";r.r(s);var a=r(432),e=r(355);for(var i in e)"default"!==i&&function(t){r.d(s,t,function(){return e[t]})}(i);var n=r(0),l=Object(n.a)(e.default,a.a,a.b,!1,null,null,null);l.options.__file="src\\views\\articles\\frontend\\AngularJS\\angular-ui-router-3.vue",s.default=l.exports},354:function(t,s,r){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.default={data:function(){return{toTop:this.$util.toTop}}}},355:function(t,s,r){"use strict";r.r(s);var a=r(354),e=r.n(a);for(var i in a)"default"!==i&&function(t){r.d(s,t,function(){return a[t]})}(i);s.default=e.a},432:function(t,s,r){"use strict";var a=function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("BoWen",[r("div",{staticClass:"p-1",attrs:{slot:"catalog"},slot:"catalog"},[r("Steps",{attrs:{direction:"vertical"}},[r("Step",{attrs:{title:"嵌套路由",content:"嵌套路由",status:"wait"},nativeOn:{click:function(s){t.toTop("#angular-ui-router-3-1",30)}}})],1)],1),r("div",{staticClass:"px-1"},[r("div",{staticClass:"py-3 text-center"},[r("h1",[r("Icon",{attrs:{type:"ios-book-outline"}}),t._v(" UI-Router for AngularJS (四)")],1),r("p",{staticClass:"pt-1"},[t._v("UI-Router is the defacto standard for routing in AngularJS")])]),r("h3",{staticClass:"ml-1",attrs:{id:"angular-ui-router-3-1"}},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" 嵌套路由")],1),r("Divider"),r("p",[t._v("嵌套路由共有四种方法，由 'dot notation'，parent property（其值可以为字符串和对象），第三方模块(stateHelper)，这里不对 stateHelper 进行介绍，需要的同学可点击"),r("a",{attrs:{href:"https://github.com/marklagendijk/ui-router.stateHelper"}},[t._v(" stateHelper")]),t._v(" 查看。")]),r("h4",{staticClass:"mb-1 ml-1"},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" dot notation")],1),r("p",[t._v("使用嵌套路由时，默认行为是子状态将其 url 附加到其每个父状态的 url，定义的方式很简单，就是状态名的格式设置格式为  "),r("pre",{staticClass:"custom-pre"},[t._v("<parentName>.<sonName>")])]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"ml-2"},[r("code",{staticClass:"js"},[t._v("$stateProvider \n    .state('products', {\n        url: '/products',\n        ...\n    })\n    .state('products.list', {\n        url: '/list',\n        ...\n    });")])]),r("p",[t._v("它们路径表现为："),r("ul",{staticClass:"ml-1"},[r("li",[t._v("'products' state matches \"/products\"")]),r("li",[t._v("'products.list' state matches \"/products/list\".")])])]),r("p",[t._v("当然我们也可以为其设置绝对路径，这样就不会受父路由的影响，而操作的方式就是在配置 url 是在前面添加 ^ 即可。")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"ml-2"},[r("code",{staticClass:"js"},[t._v("$stateProvider \n    .state('products', {\n        url: '/products',\n        ...\n    })\n    .state('products.list', {\n        url: '^/list',\n        ...\n    });")])]),r("p",[t._v("它们路径表现为："),r("ul",{staticClass:"ml-1"},[r("li",[t._v("'products' state matches \"/products\"")]),r("li",[t._v("'products.list' state matches \"/list\".")])])]),r("h4",{staticClass:"mb-1 ml-1"},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" parent property")],1),r("p",[t._v("通过设置 parent 属性来指定它的父状态。")]),r("pre",{directives:[{name:"highlight",rawName:"v-highlight"}],staticClass:"ml-2"},[r("code",{staticClass:"js"},[t._v("// parent 的值可以是父状态的名称 \n$stateProvider\n    .state('products', {\n        url: '/products',\n        ...\n    })\n    .state('list', {\n        url: '/list',\n        parent: 'products'\n        ...\n    });\n\n// parent 的值也可以是一个描述状态的对象\nvar products = { \n    name: 'products',\n    templateUrl: 'products.html'\n}\nvar productsList = { \n    name: 'list',\n    parent: products,\n    templateUrl: 'products.list.html'\n}\n \n$stateProvider\n  .state(products)\n  .state(productsList)")])]),r("p",{staticClass:"text-info"},[t._v("父子状态的定义顺序可以随意，因为创建它们时会自动为其排队，首先创建父级状态。")]),r("p",{staticClass:"text-warn"},[t._v("如果我们定义了子状态，那么其父级状态必须存在。")]),r("p",{staticClass:"text-warn"},[t._v("状态的名称不能重复，即使它们身处不同的父级状态下。")]),r("p",{staticClass:"text-info"},[t._v("当子状态被激活时，其父级状态也会被激活。")]),r("p",{staticClass:"text-info"},[t._v("当子状态被激活时，将会加载其 template 显示在父级的 ui-view 中，当没被指定父级状态时，显示在index.html 的 ui-view 中。")]),r("h3",{staticClass:"ml-1",attrs:{id:"angular-ui-router-3-2"}},[r("Icon",{attrs:{type:"logo-buffer"}}),t._v(" 嵌套路由")],1),r("Divider"),r("p",{staticClass:"text-right"},[t._v("还没有看够？请点击"),r("a",{attrs:{href:"/#/articles/frontend/AngularJS/angular-ui-router-4"}},[t._v(" UI-Router for AngularJS (五) ")]),t._v("查看更多内容。")]),r("p",{staticClass:"text-right"},[t._v("参考资料："),r("a",{attrs:{href:"https://github.com/angular-ui/ui-router/wiki/URL-Routing"}},[t._v("https://github.com/angular-ui/ui-router/wiki/URL-Routing")])]),r("FooterDivider")],1)])},e=[];a._withStripped=!0,r.d(s,"a",function(){return a}),r.d(s,"b",function(){return e})}}]);